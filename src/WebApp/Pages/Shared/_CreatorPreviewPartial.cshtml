@using Microsoft.AspNetCore.Identity
@using WebApp.Models.Developer
@using WebApp.Models.Files
@using WebApp.Models.Identity
@using WebApp.Services.Files
@model ICreator

@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject IFileService _fileService

@{
    //data for subscription
    var userId = (await _userManager.GetUserAsync(User))?.UserId;
    //var hasBankAccount = _
}

@{
    var creatorType = Model switch 
    {
        UserModel => CreatorType.User,
        ProjectModel => CreatorType.Project,
        CompanyModel => CreatorType.Company,
        _ => throw new NotSupportedException()
        };
    var creatorTypeLink = Model switch
    {
        UserModel => "UserProfile",
        ProjectModel => "ProjectProfile",
        CompanyModel => "CompanyProfile",
        _ => throw new NotSupportedException()
        };
    var companies = Model switch {
        UserModel user => user.Companies,
        ProjectModel project => project.Company != null ? new List<CompanyModel> {project.Company} : new List<CompanyModel>(),
        CompanyModel => new List<CompanyModel>(),
        _ => throw new ArgumentOutOfRangeException()
        };
    var avatar = await _fileService.GetAvatar(Model.Id, creatorType);
}

<div>
    <a asp-page="/@creatorTypeLink" asp-route-id="@Model.Id">@Model.Name</a>
    <img src="@avatar?.Path" alt="avatar">
    @foreach (var tag in Model.Tags)
    {
        <div>
            @tag.Text
        </div>
    }
    @foreach (var company in companies)
    {
        <div>
            @company.Name
        </div>
    }
</div>
@{
    switch (Model)
    {
        case UserModel:
            <form asp-controller="Subscribe" asp-action="FollowToUser" asp-route-developerId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Follow</button>
            </form>
            <form asp-controller="Subscribe" asp-action="SubscribeToUser" asp-route-developerId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Subscribe</button>
            </form>
            break;
        case ProjectModel:
            <form  asp-controller="Subscribe" asp-action="FollowToProject" asp-route-projectId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Follow</button>
            </form>

            <form asp-controller="Subscribe" asp-action="SubscribeToProject" asp-route-projectId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Subscribe</button>
            </form>
            break;
        case CompanyModel:
            <form  asp-controller="Subscribe" asp-action="FollowToCompany" asp-route-companyId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Follow</button>
            </form>
            <form asp-controller="Subscribe" asp-action="SubscribeToCompany" asp-route-companyId="@Model.Id" asp-route-userId="@userId">
                <button type="submit">Subscribe</button>
            </form>
            break;
        default:
            throw new NotSupportedException();
    }
}
