@using Microsoft.AspNetCore.Identity
@using WebApp.Models.Identity
@using WebApp.Models.Subscription
@using WebApp.Services.Developer
@using WebApp.Services.Subscription
@model WebApp.Models.Posts.PostModel

@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject ISubscriptionService _subscriptionService
@inject IDeveloperService _developerService;

@{
    var user = _signInManager.IsSignedIn(User) ? await _userManager.GetUserAsync(User) : null;
    var hasAccess = Model.RequiredSubscriptionType == PriceType.Free;
    /*if (user != null)
    {
        var hasSubscribeToUser = await _subscriptionService.HasUserAccess(user.UserId, 
            Model.UserId, 
            Model.RequiredSubscriptionType, 
            TypeOfSubscription.User);
        var hasSubscribeToProject = Model.ProjectId != 0 && await _subscriptionService.HasUserAccess(user.UserId, 
            Model.ProjectId, 
            Model.RequiredSubscriptionType, 
            TypeOfSubscription.Project);
        var companyId = Model.ProjectId != 0 ? (await _developerService.GetProjectCompany(Model.ProjectId)).Id : 0;
        var hasSubscribeToCompany = companyId != 0 && await _subscriptionService.HasUserAccess(user.UserId,
            companyId,
            Model.RequiredSubscriptionType,
            TypeOfSubscription.Team);
        hasAccess = hasSubscribeToUser || hasSubscribeToProject || hasSubscribeToCompany;
    }*/
}

@if (hasAccess)
{
    <div>
        @Model.Id
        @Model.Text
        @*todo image*@
    </div>
}
else
{
    <div>
        Нет доступа
    </div>
}
