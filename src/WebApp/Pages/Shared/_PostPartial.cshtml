@using Microsoft.AspNetCore.Identity
@using WebApp.Models.Identity
@using WebApp.Models.Subscription
@using WebApp.Services.Subscription
@model WebApp.Models.Posts.PostModel

@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject ISubscriptionService _subscriptionService

@{
    var user = _signInManager.IsSignedIn(User) ? await _userManager.GetUserAsync(User) : null;
    var hasAccess = Model.RequiredSubscriptionType == PriceType.Free;
    /*if (user != null)
    {
        hasAccess =
            await _subscriptionService.HasUserAccess(user.UserId, Model.UserId, Model.RequiredSubscriptionType) ||
            Model.ProjectId != 0 &&
            await _subscriptionService.HasUserAccess(user.UserId, Model.ProjectId, Model.RequiredSubscriptionType);
    }*/
}

@if (hasAccess)
{
    <div>
        @Model.Id
        @Model.Text
        @*todo image*@
    </div>
}
else
{
    <div>
        Нет доступа
    </div>
}
