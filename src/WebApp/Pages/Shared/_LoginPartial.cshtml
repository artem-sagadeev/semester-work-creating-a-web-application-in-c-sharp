@using Microsoft.AspNetCore.Identity
@using WebApp.Models
@using WebApp.Models.Identity
@using WebApp.Services.Developer

@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject IDeveloperService _developerService

@{
    var userName = _signInManager.IsSignedIn(User) ?
        (await _developerService.GetUser((await _userManager.GetUserAsync(User)).UserId)).Name : "";
}

<ul class="navbar-nav">
@if (_signInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Sign up</a>
    </li>
}
</ul>
