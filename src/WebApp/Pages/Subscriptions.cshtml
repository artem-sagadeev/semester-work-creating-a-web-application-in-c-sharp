@page
@using WebApp.Models.Subscription
@using WebApp.Services.Developer
@model WebApp.Pages.SubscriptionsModel
@{
}

@inject IDeveloperService _developerService;

@for (int i = 0; i < @Model.AllSubscriptions.Count; i++)
{
    if (@Model.AllSubscriptions[i].Tariff.TypeOfSubscription == TypeOfSubscription.Project)
    {
        <a asp-page="ProjectProfile" asp-route-id="@Model.AllSubscriptions[i].SubscribedToId">@((await _developerService.GetProject(Model.AllSubscriptions[i].SubscribedToId)).Name)</a>
    }
    else if (@Model.AllSubscriptions[i].Tariff.TypeOfSubscription == TypeOfSubscription.User)
    {
<a asp-page="UserProfile" asp-route-id="@Model.AllSubscriptions[i].SubscribedToId">@((await _developerService.GetUser(Model.AllSubscriptions[i].SubscribedToId)).Name)</a>
    }
    else if (@Model.AllSubscriptions[i].Tariff.TypeOfSubscription == TypeOfSubscription.Team)
    {
<a asp-page="UserProfile" asp-route-id="@Model.AllSubscriptions[i].SubscribedToId">@((await _developerService.GetCompany(Model.AllSubscriptions[i].SubscribedToId)).Name)</a>
    }
    else
    {
        throw new Exception("Нет нужного типа");
    }
    if (@Model.AllSubscriptions[i].IsAutorenewal)
    {
        <p>Автопродление; Следующее списание: @Model.AllSubscriptions[i].EndDate @Model.AllSubscriptions[i].Tariff.PricePerMonth руб/мес; Тип подписки: @Model.AllSubscriptions[i].Tariff.PriceType; @Model.AllSubscriptions[i].Tariff</p>
    }
    else
    {
        <p>Оплачено до @Model.AllSubscriptions[i].EndDate @Model.AllSubscriptions[i].Tariff.PricePerMonth руб/мес; Тип подписки: @Model.AllSubscriptions[i].Tariff.PriceType; </p>
    }
}